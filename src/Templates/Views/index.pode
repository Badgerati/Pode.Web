<html>
    $(Use-PodeWebPartialView -Path 'shared/head' -Data @{
        Title = $data.Page.Name
        Theme = $data.Theme
        AppPath = $data.AppPath
    })

    <body id="normal-page" pode-theme="$($data.Theme)" pode-app-path="$($data.AppPath)" $(ConvertTo-PodeWebEvents -Events $data.Page.Events)>
        <nav class="navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow navbar-expand-lg">
            <button type='button' class='btn btn-icon-only' id='menu-toggle'>
                <span class='mdi mdi-menu-open'></span>
            </button>

            <a class="navbar-brand col-md-3 col-lg-2 mr-0 px-3" href="$($data.AppPath)/">
                $(
                    $title = Get-PodeWebState -Name 'title'
                    $logo = Get-PodeWebState -Name 'logo'

                    if (![string]::IsNullOrWhiteSpace($logo)) {
                        "<img src='$($logo)' width='30' height='30' class='d-inline-block align-top' alt='$($title)' loading='lazy'>"
                    }

                    $title
                )
            </a>

            <button class="navbar-toggler position-absolute d-md-none collapsed" type="button" data-toggle="collapse" data-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div id='pode-nav'>
                <div id='pode-nav-social'>
                    $(
                        $socials = Get-PodeWebState -Name 'social'
                        foreach ($key in $socials.Keys) {
                            $social = $socials[$key]

                            "<a href='$($social.Url.ToLowerInvariant())' target='_blank' title='$($social.Tooltip)' data-toggle='tooltip'>
                                <span class='mdi mdi-$($key.ToLowerInvariant())'></span>
                            </a>"
                        }
                    )
                </div>

                <div id='pode-nav-items'>
                    <ul class="navbar-nav mr-auto">
                        $(Use-PodeWebPartialView -Path 'shared/_load' -Data @{ Content = $data.Navigation })
                    </ul>
                </div>
            </div>

            $(if ($data.Auth.Enabled) {
                if ($data.Auth.Authenticated) {
                    "<form class='form-inline' action='$($data.AppPath)/logout' method='POST' style='margin-bottom: 0'>
                        <span class='navbar-text mRight1 welcome-msg'>"
                            if (![string]::IsNullOrWhiteSpace($data.Auth.Avatar)) {
                                "<img src='$($data.Auth.Avatar)'>"
                            }
                            "Hello, $([System.Net.WebUtility]::HtmlEncode($data.Auth.Username))
                        </span>
                        <button class='btn btn-danger my-2 my-sm-0 mBottom-06 mRight05' type='submit'>
                            <span class='mdi mdi-logout mRight02'></span>
                            Sign out
                        </button>
                    </form>"
                }
                else {
                    "<form class='form-inline' action='$($data.AppPath)/login' method='GET' style='margin-bottom: 0'>
                        <button class='btn btn-success my-2 my-sm-0 mBottom-06 mRight05' type='submit'>
                            <span class='mdi mdi-login mRight02'></span>
                            Sign in
                        </button>
                    </form>"
                }
            })
        </nav>

        <div class="container-fluid">
            <div class="row">
                $(
                    $hideSidebar = [string]::Empty
                    if ($data.Page.NoSidebar -or (Get-PodeWebState -Name 'hide-sidebar')) {
                        $hideSidebar = 'hide-on-start'
                    }

                    "<nav id='sidebarMenu' class='col-md-3 col-lg-2 d-md-block bg-light sidebar collapse $($hideSidebar)'>"
                )
                    $(
                        $noPageFilter = Get-PodeWebState -Name 'no-page-filter'

                        if (!$noPageFilter) {
                            "<div class='input-group mb-2 mLeft1 w90 mTop1-8'>
                                <div class='input-group-prepend'><div class='input-group-text'><span class='mdi mdi-filter'></span></div></div>
                                <input type='text' class='form-control pode-nav-filter' id='filter_sidebar' placeholder='Filter' for='sidebar-list'>
                            </div>"
                        }
                        else {
                            "<div class='mb-2 mTop1-8'></div>"
                        }
                    )

                    <footer class="footer powered-by mt-auto py-3">
                        <div>
                            <span class="text-muted">
                                <span class="mdi mdi-heart mdi-size-15" style="color:orangered"></span>
                                Powered by <a href='https://badgerati.github.io/Pode/' style='color: deepskyblue; text-decoration: none;'>Pode</a>
                            </span>
                        </div>
                    </footer>

                    <div class="sidebar-sticky pt-0">
                        <ul id="sidebar-list" class="nav flex-column">
                            <li class="nav-item nav-page-item">
                                <a class="nav-link $(if ($data.Page.Name -ieq 'home') { 'active' })" href="$($data.AppPath)/">
                                    <div>
                                        <span class="mdi mdi-home mdi-size-22 mRight02"></span>
                                        Home
                                    </div>
                                </a>
                            </li>

                            $(
                                $pageGroups = ((Get-PodeWebState -Name 'pages').Values | Group-Object -Property { $_.Group } | Sort-Object -Property Name)

                                foreach ($pageGroup in $pageGroups) {
                                    $pages = @(foreach ($page in $pageGroup.Group) {
                                        if ($page.Hide -or $page.IsSystem -or !(Test-PodeWebPageAccess -PageAccess $page.Access -Auth $data.Auth)) {
                                            continue
                                        }

                                        $page
                                    })

                                    if ($pages.Length -eq 0) {
                                        continue
                                    }

                                    if (![string]::IsNullOrWhiteSpace($pageGroup.Name)) {
                                        $chevron = 'right'
                                        $show = [string]::Empty

                                        if ($data.Page.Group -ieq $pageGroup.Name) {
                                            $chevron = 'down'
                                            $show = 'show'
                                        }

                                        "<li class='nav-item mTop1 nav-group-title'>
                                            <a class='nav-link' data-toggle='collapse' href='#nav-$($pageGroup.Name)' aria-expanded='$($data.Page.Group -ieq $pageGroup.Name)' aria-controls='nav-$($pageGroup.Name)'>
                                                <div>
                                                    <span class='mdi mdi-chevron-$($chevron) mdi-size-22 mRight02'></span>
                                                    <span class='h6'>$([System.Net.WebUtility]::HtmlEncode($pageGroup.Name))</span>
                                                    <span class='badge badge-inbuilt-theme'>$($pages.Length)</span>
                                                </div>
                                            </a>
                                        </li>"

                                        "<div class='collapse $($show)' id='nav-$($pageGroup.Name)'>"
                                    }

                                    foreach ($page in ($pages | Sort-Object -Property { $_.Name })) {
                                        $href = [string]::Empty
                                        if (!$page.IsDynamic) {
                                            $href = "href='$($page.Url)'"

                                            if ($page.NewTab) {
                                                $href += " target='_blank'"
                                            }
                                        }

                                        $activePage = [string]::Empty
                                        if (($data.Page.Name -ieq $page.Name) -and ($data.Page.Group -ieq $pageGroup.Name)) {
                                            $activePage = 'active'
                                        }

                                        "<li class='nav-item nav-page-item'>
                                            <a class='nav-link $($activePage)' name='$($page.Name)' pode-page-group='$($pageGroup.Name)' pode-page-type='$($page.ObjectType)' pode-dynamic='$($page.IsDynamic)' $($href)>
                                                <div>
                                                    <span class='mdi mdi-$($page.Icon.ToLowerInvariant()) mdi-size-22 mRight02'></span>
                                                    $([System.Net.WebUtility]::HtmlEncode($page.Name))
                                                </div>
                                            </a>
                                        </li>"
                                    }

                                    if (![string]::IsNullOrWhiteSpace($pageGroup.Name)) {
                                        "</div>"
                                    }
                                }
                            )
                        </ul>
                    </div>

                </nav>

                <div aria-live="polite" aria-atomic="true" style="min-height: 200px;" class="sticky">
                    <div id="toast-area">
                    </div>
                </div>

                <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-md-4">
                    $(if (!$data.Page.NoTitle) {
                        "<div id='pode-page-title' class='d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom'>
                            <h1 class='h2'>"
                                if ($data.Page.ShowBack) {
                                    "<a href='$($data.Page.Url)'><span class='mdi mdi-arrow-left'></span></a>"
                                }
                                if (![string]::IsNullOrWhiteSpace($data.Page.Icon)) {
                                    "<span class='mdi mdi-$($data.Page.Icon.ToLowerInvariant()) pode-page-title-icon'></span>"
                                }
                                $data.Page.Title
                            "</h1>"
                            if ($data.Page.ShowHelp) {
                                "<span class='mdi mdi-help-circle-outline pode-page-help' for='$($data.Page.Url)' title='Help' data-toggle='tooltip'></span>"
                            }
                        "</div>"
                    }
                    else {
                        "<div id='pode-page-title' class='d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2'></div>"
                    }

                    if (!$data.Page.NoBreadcrumb) {
                        Use-PodeWebPartialView -Path "layouts/breadcrumb" -Data $data.Breadcrumb
                    })

                    $(Use-PodeWebPartialView -Path 'shared/_load' -Data @{ Content = $data.Layouts })
                </main>
            </div>
        </div>

        $(Use-PodeWebPartialView -Path 'shared/scripts' -Data @{
            AppPath = $data.AppPath
        })
    </body>
</html>